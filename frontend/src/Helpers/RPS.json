{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_c1Hash",
          "type": "bytes32"
        },
        {
          "name": "_j2",
          "type": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "TIMEOUT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "c1Hash",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "c2",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "j1",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "j1Timeout",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "j2",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "j2Timeout",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "lastAction",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "play",
      "inputs": [
        {
          "name": "_c2",
          "type": "uint8"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "solve",
      "inputs": [
        {
          "name": "_c1",
          "type": "uint8"
        },
        {
          "name": "_salt",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "win",
      "inputs": [
        {
          "name": "_c1",
          "type": "uint8"
        },
        {
          "name": "_c2",
          "type": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "w",
          "type": "bool"
        }
      ],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x608060405261012c600555604051604080610a73833981018060405281019080805190602001909291908051906020019092919050505034600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028160001916905550426006819055505050610992806100e16000396000f30060806040526004361061009d5760003560e01c63ffffffff1680630c4395b9146100a2578063294914a4146100f75780633a4b66f11461010e57806348e257cb146101395780634d03e3d21461017257806353a04b05146101a557806380985af9146101c857806389f71d531461021f578063a5ddec7c1461024a578063c37597c614610284578063c8391142146102db578063f56f48f2146102f2575b600080fd5b3480156100ae57600080fd5b506100dd600480360381019080803560ff169060200190929190803560ff16906020019092919050505061031d565b604051808215151515815260200191505060405180910390f35b34801561010357600080fd5b5061010c6103e6565b005b34801561011a57600080fd5b50610123610491565b6040518082815260200191505060405180910390f35b34801561014557600080fd5b5061014e610497565b6040518082600581111561015e57fe5b60ff16815260200191505060405180910390f35b34801561017e57600080fd5b506101876104aa565b60405180826000191660001916815260200191505060405180910390f35b6101c6600480360381019080803560ff1690602001909291905050506104b0565b005b3480156101d457600080fd5b506101dd6105a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022b57600080fd5b506102346105c9565b6040518082815260200191505060405180910390f35b34801561025657600080fd5b50610282600480360381019080803560ff169060200190929190803590602001909291905050506105cf565b005b34801561029057600080fd5b5061029961088b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e757600080fd5b506102f06108b0565b005b3480156102fe57600080fd5b50610307610960565b6040518082815260200191505060405180910390f35b600081600581111561032b57fe5b83600581111561033757fe5b141561034657600090506103e0565b6000600581111561035357fe5b83600581111561035f57fe5b141561036e57600090506103e0565b600282600581111561037c57fe5b81151561038557fe5b06600284600581111561039457fe5b81151561039d57fe5b0614156103c4578160058111156103b057fe5b8360058111156103bc57fe5b1090506103e0565b8160058111156103d057fe5b8360058111156103dc57fe5b1190505b92915050565b600060058111156103f357fe5b600360009054906101000a900460ff16600581111561040e57fe5b14151561041a57600080fd5b600554600654014211151561042e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050506000600481905550565b60045481565b600360009054906101000a900460ff1681565b60025481565b600060058111156104bd57fe5b600360009054906101000a900460ff1660058111156104d857fe5b1415156104e457600080fd5b600060058111156104f157fe5b8160058111156104fd57fe5b1415151561050a57600080fd5b6004543414151561051a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057657600080fd5b80600360006101000a81548160ff0219169083600581111561059457fe5b02179055504260068190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600060058111156105dc57fe5b8260058111156105e857fe5b141515156105f557600080fd5b6000600581111561060257fe5b600360009054906101000a900460ff16600581111561061d57fe5b1415151561062a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561068557600080fd5b6002546000191682826040518083600581111561069e57fe5b60ff1660f81b8152600101828152602001925050506040518091039020600019161415156106cb57600080fd5b6106e482600360009054906101000a900460ff1661031d565b1561074a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087f565b610763600360009054906101000a900460ff168361031d565b156107ca57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087e565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050505b5b60006004819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060058111156108bd57fe5b600360009054906101000a900460ff1660058111156108d857fe5b141515156108e557600080fd5b60055460065401421115156108f957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f19350505050506000600481905550565b600554815600a165627a7a72305820635a2479c4ff2c6c587b9c9cf8890c12aafaff15a87380d2ecb19d1f110ca1bb0029",
    "sourceMap": "26:3811:0:-;;;519:9;494:34;;963:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:9;1024:5;:17;;;;1111:10;1108:2;;:13;;;;;;;;;;;;;;;;;;1134:3;1131:2;;:6;;;;;;;;;;;;;;;;;;1154:7;1147:6;:14;;;;;;;1182:3;1171:10;:14;;;;963:229;;26:3811;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061009d5760003560e01c63ffffffff1680630c4395b9146100a2578063294914a4146100f75780633a4b66f11461010e57806348e257cb146101395780634d03e3d21461017257806353a04b05146101a557806380985af9146101c857806389f71d531461021f578063a5ddec7c1461024a578063c37597c614610284578063c8391142146102db578063f56f48f2146102f2575b600080fd5b3480156100ae57600080fd5b506100dd600480360381019080803560ff169060200190929190803560ff16906020019092919050505061031d565b604051808215151515815260200191505060405180910390f35b34801561010357600080fd5b5061010c6103e6565b005b34801561011a57600080fd5b50610123610491565b6040518082815260200191505060405180910390f35b34801561014557600080fd5b5061014e610497565b6040518082600581111561015e57fe5b60ff16815260200191505060405180910390f35b34801561017e57600080fd5b506101876104aa565b60405180826000191660001916815260200191505060405180910390f35b6101c6600480360381019080803560ff1690602001909291905050506104b0565b005b3480156101d457600080fd5b506101dd6105a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022b57600080fd5b506102346105c9565b6040518082815260200191505060405180910390f35b34801561025657600080fd5b50610282600480360381019080803560ff169060200190929190803590602001909291905050506105cf565b005b34801561029057600080fd5b5061029961088b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e757600080fd5b506102f06108b0565b005b3480156102fe57600080fd5b50610307610960565b6040518082815260200191505060405180910390f35b600081600581111561032b57fe5b83600581111561033757fe5b141561034657600090506103e0565b6000600581111561035357fe5b83600581111561035f57fe5b141561036e57600090506103e0565b600282600581111561037c57fe5b81151561038557fe5b06600284600581111561039457fe5b81151561039d57fe5b0614156103c4578160058111156103b057fe5b8360058111156103bc57fe5b1090506103e0565b8160058111156103d057fe5b8360058111156103dc57fe5b1190505b92915050565b600060058111156103f357fe5b600360009054906101000a900460ff16600581111561040e57fe5b14151561041a57600080fd5b600554600654014211151561042e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050506000600481905550565b60045481565b600360009054906101000a900460ff1681565b60025481565b600060058111156104bd57fe5b600360009054906101000a900460ff1660058111156104d857fe5b1415156104e457600080fd5b600060058111156104f157fe5b8160058111156104fd57fe5b1415151561050a57600080fd5b6004543414151561051a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057657600080fd5b80600360006101000a81548160ff0219169083600581111561059457fe5b02179055504260068190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600060058111156105dc57fe5b8260058111156105e857fe5b141515156105f557600080fd5b6000600581111561060257fe5b600360009054906101000a900460ff16600581111561061d57fe5b1415151561062a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561068557600080fd5b6002546000191682826040518083600581111561069e57fe5b60ff1660f81b8152600101828152602001925050506040518091039020600019161415156106cb57600080fd5b6106e482600360009054906101000a900460ff1661031d565b1561074a576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087f565b610763600360009054906101000a900460ff168361031d565b156107ca57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505061087e565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050505b5b60006004819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060058111156108bd57fe5b600360009054906101000a900460ff1660058111156108d857fe5b141515156108e557600080fd5b60055460065401421115156108f957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f19350505050506000600481905550565b600554815600a165627a7a72305820635a2479c4ff2c6c587b9c9cf8890c12aafaff15a87380d2ecb19d1f110ca1bb0029",
    "sourceMap": "26:3811:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:352;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3478:352:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:196;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3029:196:0;;;;;;440:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:20:0;;;;;;;;;;;;;;;;;;;;;;;377:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:335;;;;;;;;;;;;;;;;;;;;;;;;;;;;110:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;110:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;622:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;622:25:0;;;;;;;;;;;;;;;;;;;;;;;1903:775;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1903:775:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2755:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2755:198:0;;;;;;494:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;494:34:0;;;;;;;;;;;;;;;;;;;;;;;3478:352;3529:6;3558:3;3551:10;;;;;;;;:3;:10;;;;;;;;;3547:276;;;3582:5;3575:12;;;;3547:276;3649:9;3644:14;;;;;;;;:3;:14;;;;;;;;;3640:183;;;3679:5;3672:12;;;;3640:183;3748:1;3743:3;3738:9;;;;;;;;:11;;;;;;;;3735:1;3730:3;3725:9;;;;;;;;:11;;;;;;;;:24;3721:102;;;3776:3;3772:7;;;;;;;;:3;:7;;;;;;;;;3764:16;;;;3721:102;3819:3;3815:7;;;;;;;;:3;:7;;;;;;;;;3807:16;;3478:352;;;;;:::o;3029:196::-;3072:9;3068:13;;;;;;;;:2;;;;;;;;;;;:13;;;;;;;;;3060:22;;;;;;;;3141:7;;3128:10;;:20;3122:3;:26;3114:35;;;;;;;;3187:2;;;;;;;;;;;:7;;:14;3195:5;;3187:14;;;;;;;;;;;;;;;;;;;;;;;;3217:1;3211:5;:7;;;;3029:196::o;440:20::-;;;;:::o;377:14::-;;;;;;;;;;;;;:::o;329:21::-;;;;:::o;1307:335::-;1361:9;1357:13;;;;;;;;:2;;;;;;;;;;;:13;;;;;;;;;1349:22;;;;;;;;1420:9;1415:14;;;;;;;;:3;:14;;;;;;;;;;1407:23;;;;;;;;1482:5;;1471:9;:16;1463:25;;;;;;;;1544:2;;;;;;;;;;;1532:14;;:10;:14;;;1524:23;;;;;;;;1608:3;1605:2;;:6;;;;;;;;;;;;;;;;;;;;;;;;1632:3;1621:10;:14;;;;1307:335;:::o;110:17::-;;;;;;;;;;;;;:::o;622:25::-;;;;:::o;1903:775::-;1966:9;1961:14;;;;;;;;:3;:14;;;;;;;;;;1953:23;;;;;;;;2035:9;2031:13;;;;;;;;:2;;;;;;;;;;;:13;;;;;;;;;;2023:22;;;;;;;;2108:2;;;;;;;;;;;2096:14;;:10;:14;;;2088:23;;;;;;;;2172:6;;2150:28;;;2160:3;2164:5;2150:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;2142:37;;;;;;;;2472:11;2476:3;2480:2;;;;;;;;;;;2472:3;:11::i;:::-;2468:187;;;2497:2;;;;;;;;;;;:7;;:16;2507:5;;2505:1;:7;2497:16;;;;;;;;;;;;;;;;;;;;;;;;2468:187;;;2532:11;2536:2;;;;;;;;;;;2539:3;2532;:11::i;:::-;2528:127;;;2557:2;;;;;;;;;;;:7;;:16;2567:5;;2565:1;:7;2557:16;;;;;;;;;;;;;;;;;;;;;;;;2528:127;;;2602:2;;;;;;;;;;;:7;;:14;2610:5;;2602:14;;;;;;;;;;;;;;;;;;;;;;;;2630:2;;;;;;;;;;;:7;;:14;2638:5;;2630:14;;;;;;;;;;;;;;;;;;;;;;;;2528:127;2468:187;2670:1;2664:5;:7;;;;1903:775;;:::o;44:17::-;;;;;;;;;;;;;:::o;2755:198::-;2798:9;2794:13;;;;;;;;:2;;;;;;;;;;;:13;;;;;;;;;;2786:22;;;;;;;;2867:7;;2854:10;;:20;2848:3;:26;2840:35;;;;;;;;2913:2;;;;;;;;;;;:7;;:16;2923:5;;2921:1;:7;2913:16;;;;;;;;;;;;;;;;;;;;;;;;2945:1;2939:5;:7;;;;2755:198::o;494:34::-;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "TIMEOUT()": "f56f48f2",
    "c1Hash()": "4d03e3d2",
    "c2()": "48e257cb",
    "j1()": "c37597c6",
    "j1Timeout()": "c8391142",
    "j2()": "80985af9",
    "j2Timeout()": "294914a4",
    "lastAction()": "89f71d53",
    "play(uint8)": "53a04b05",
    "solve(uint8,uint256)": "a5ddec7c",
    "stake()": "3a4b66f1",
    "win(uint8,uint8)": "0c4395b9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_c1\",\"type\":\"uint8\"},{\"name\":\"_c2\",\"type\":\"uint8\"}],\"name\":\"win\",\"outputs\":[{\"name\":\"w\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"j2Timeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"c2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"c1Hash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c2\",\"type\":\"uint8\"}],\"name\":\"play\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"j2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastAction\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c1\",\"type\":\"uint8\"},{\"name\":\"_salt\",\"type\":\"uint256\"}],\"name\":\"solve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"j1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"j1Timeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TIMEOUT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_c1Hash\",\"type\":\"bytes32\"},{\"name\":\"_j2\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"j1Timeout()\":{\"details\":\"Let j2 get the funds back if j1 did not play.\"},\"j2Timeout()\":{\"details\":\"Let j1 take back the funds if j2 never play.\"},\"play(uint8)\":{\"details\":\"To be called by j2 and provided stake.\",\"params\":{\"_c2\":\"The move submitted by j2.\"}},\"solve(uint8,uint256)\":{\"details\":\"To be called by j1. Reveal the move and send the ETH to the winning party or split them.\",\"params\":{\"_c1\":\"The move played by j1.\",\"_salt\":\"The salt used when submitting the commitment when the constructor was called.\"}},\"win(uint8,uint8)\":{\"details\":\"Is this move winning over the other.\",\"params\":{\"_c1\":\"The first move.\",\"_c2\":\"The move the first move is considered again.\"},\"return\":\"w True if c1 beats c2. False if c1 is beaten by c2 or in case of tie.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/RSP.sol\":\"RPS\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/RSP.sol\":{\"keccak256\":\"0x98e02e7750e12fdff0f242817b3032dc42e56070b5d4ea13d1b53b3d98565722\",\"urls\":[\"bzzr://8c0365c6e1270de3176d6e8f1623e43b666c8a40ba1ceea48c0b1722631fe87f\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.4.26+commit.4563c3fc"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_c1",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "_c2",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "win",
          "outputs": [
            {
              "internalType": null,
              "name": "w",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "j2Timeout"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stake",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "c2",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "c1Hash",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_c2",
              "type": "uint8"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "play"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "j2",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastAction",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_c1",
              "type": "uint8"
            },
            {
              "internalType": null,
              "name": "_salt",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "solve"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "j1",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "j1Timeout"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TIMEOUT",
          "outputs": [
            {
              "internalType": null,
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": null,
              "name": "_c1Hash",
              "type": "bytes32"
            },
            {
              "internalType": null,
              "name": "_j2",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        }
      ],
      "devdoc": {
        "methods": {
          "j1Timeout()": {
            "details": "Let j2 get the funds back if j1 did not play."
          },
          "j2Timeout()": {
            "details": "Let j1 take back the funds if j2 never play."
          },
          "play(uint8)": {
            "details": "To be called by j2 and provided stake.",
            "params": {
              "_c2": "The move submitted by j2."
            }
          },
          "solve(uint8,uint256)": {
            "details": "To be called by j1. Reveal the move and send the ETH to the winning party or split them.",
            "params": {
              "_c1": "The move played by j1.",
              "_salt": "The salt used when submitting the commitment when the constructor was called."
            }
          },
          "win(uint8,uint8)": {
            "details": "Is this move winning over the other.",
            "params": {
              "_c1": "The first move.",
              "_c2": "The move the first move is considered again."
            },
            "return": "w True if c1 beats c2. False if c1 is beaten by c2 or in case of tie."
          }
        }
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "compilationTarget": {
        "src/RSP.sol": "RPS"
      },
      "evmVersion": "constantinople",
      "libraries": {}
    },
    "sources": {
      "src/RSP.sol": {
        "keccak256": "0x98e02e7750e12fdff0f242817b3032dc42e56070b5d4ea13d1b53b3d98565722",
        "urls": [
          "bzzr://8c0365c6e1270de3176d6e8f1623e43b666c8a40ba1ceea48c0b1722631fe87f"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "id": 0
}